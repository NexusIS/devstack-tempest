apt-get update
apt-get install --yes ntp build-essential git vim

sudo useradd -s /bin/bash -m stack
echo "stack:stack"|sudo chpasswd

echo "stack ALL = (root) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/stack
sudo chmod 0440 /etc/sudoers.d/stack

su - stack <<EOF
rm -rf devstack

git clone https://github.com/openstack-dev/devstack

cd devstack

git branch --track current origin/stable/havana
git checkout current

echo "SERVICE_HOST=$1
DATABASE_PASSWORD=password
RABBIT_PASSWORD=password
SERVICE_TOKEN=password
SERVICE_PASSWORD=password
ADMIN_PASSWORD=password
FLOATING_RANGE=192.168.56.0/27
FLAT_INTERFACE=eth0
LOGFILE=/home/stack/stack.sh.log
Q_FLOATING_ALLOCATION_POOL=start=192.168.56.12,end=192.168.56.21
PUBLIC_NETWORK_GATEWAY=192.168.56.1
API_RATE_LIMIT=False
 
disable_service n-net
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service q-meta
enable_service neutron
# Optional, to enable tempest configuration as part of devstack
enable_service tempest
" > localrc
EOF

# These commands will make sure that network traffic 
# will be correctly routed in and out of the devstack VMs.
echo 1 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv4/conf/eth0/proxy_arp
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

# NOTE: The ip_forward and proxy_arp changes will be 
# reset when the machine reboots. This makes it permanent.
echo "net.ipv4.conf.eth0.proxy_arp = 1
net.ipv4.ip_forward = 1" >> /etc/sysctl.conf

# Make sure that subsequent runs of ./stack.sh don't
# re-download OpenStack packages.
su - stack <<EOF
cd devstack
./stack.sh
echo "OFFLINE=True" >> localrc
EOF

cd /vagrant
git clone https://github.com/openstack/tempest

cd tempest

# Lock tempest to a known good commit
git branch --track current origin/stable/havana
git checkout current

# Copy the tempest config generated by ./stack.sh
cp /opt/stack/tempest/etc/tempest.conf etc/tempest.conf

echo " "
echo "Provisioning complete!"
echo "Browse to http://localhost:8088"
